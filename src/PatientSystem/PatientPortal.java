/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PatientSystem;

import CityDirectory.CityDirectory;
import CommunitySystem.CommunityDirectory;
import DoctorSystem.DoctorDirectory;
import Home.Home;
import Login.LoginForm;
import PersonSystem.Person;
import PersonSystem.PersonDirectory;
import hospitalsystem.HospitalDirectory;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mansidabriwal
 */
public class PatientPortal extends javax.swing.JFrame {

    /**
     * Creates new form PatientPortal
     */
    public PatientPortal() {
        this.person = new PersonDirectory();
        this.hospital = new HospitalDirectory();
        this.patient = new PatientDirectory();
        this.city = new CityDirectory();
        this.community = new CommunityDirectory(); 
        this.doctor = new DoctorDirectory();
        initComponents();
    }

    public PatientPortal(PersonDirectory person,HospitalDirectory hospital,PatientDirectory patient,CityDirectory city,CommunityDirectory community, DoctorDirectory doctor) {
        this.person = person;
        this.hospital=hospital;
        this.patient =  patient;
        this.city =  city;
        this.community =  community; 
        this.doctor = doctor;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        searchBar = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        btnMainMenu = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Patient Portal");

        jLabel2.setText("Name ");

        searchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarActionPerformed(evt);
            }
        });

        btnMainMenu.setText("Back to Main Menu");
        btnMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainMenuActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Blood Pressure", "Heart Rate", "Respiratory Rate", "Date of Appointment"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnSearch)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(54, 54, 54)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(309, 309, 309))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnMainMenu)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 222, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(btnMainMenu)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainMenuActionPerformed
        // TODO add your handling code here:
        new Home(person, hospital, patient, city, community,doctor).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnMainMenuActionPerformed

    private void searchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBarActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        System.out.println("heyyyy");
        name.setText(searchBar.getText());
        int i=0;
        for(Patient e: patient.getPatient()){
            System.out.println(e.getPerson().getName());
                if(e.getPerson().getName().equals(searchBar.getText())){
                    Object[] row = {e.getEncounterHistory().getEncounter().get(i).getVital().getBloodPressure(),e.getEncounterHistory().getEncounter().get(i).getVital().getHeartRate(),e.getEncounterHistory().getEncounter().get(i).getVital().getRespiratoryRate(), e.getEncounterHistory().getEncounter().get(i).getDateOfAppointement()};
                    model.addRow(row);
                    System.out.println("BP"+e.getEncounterHistory().getEncounter().get(i).getVital().getBloodPressure());
                    i++;   
                }
                 
            }
        
//        List<Patient>pat = patient.getPatient().stream().filter(patient->patient.getPerson().getName().equals(searchBar.getText())).collect(Collectors.toList());
//        if(pat.size()>0){
//            Patient pa = pat.get(0);
//            System.out.println("Person"+pa.getPerson().getName());
//            Person person =pa.getPerson();
//            name.setText(person.getName());
////            age.setText(person.getAge().toString());
//            int i=0;
//            for(Patient p: patient.getPatient()){
//                Object[] row = {
//                    p.getEncounterHistory().getEncounter().get(i).getVital().getBloodPressure(),p.getEncounterHistory().getEncounter().get(i).getVital().getHeartRate(),p.getEncounterHistory().getEncounter().get(i).getVital().getRespiratoryRate(), p.getEncounterHistory().getEncounter().get(i).getDateOfAppointement()
//                };
//                model.addRow(row);
//                i++;
//            }
//        }
//        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
//        List<Patient> pat = patient.getPatient().stream().filter(patient->patient.getPerson().getName().equals(searchBar.getText())).collect(Collectors.toList());
//        if(pat.size()>0){
//                  Patient pa =pat.get(0);
//                  Person person = pa.getPerson();
//                  name.setText(person.getName());
////                  age.setText(person.getAge().toString());
//                  int i=0;
//                  for(Patient e: patient.getPatient()){
//                      Object[] row1={ e.getEncounterHistory().getEncounter().get(i).getVital().getBloodPressure(),e.getEncounterHistory().getEncounter().get(i).getVital().getHeartRate(),e.getEncounterHistory().getEncounter().get(i).getVital().getRespiratoryRate())};                   
//                      model.addRow(row1);
//                      i++;
//                      
//                  }
//                  
//                  
//    }          
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientPortal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMainMenu;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField searchBar;
    // End of variables declaration//GEN-END:variables
    PersonDirectory person;
    HospitalDirectory hospital;
    PatientDirectory patient;
    CityDirectory city;
    CommunityDirectory community;
    DoctorDirectory doctor;
}

